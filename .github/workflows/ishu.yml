name: Flutter CI

on:
  push:
    branches:
      - main
      - master
      - ishu
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # Add support for all environments
    runs-on: ${{ matrix.os }}

    steps:
      # Install dependencies
      # - name: Install dependencies
      #   run: |
      #     cd $GITHUB_WORKSPACE  # This ensures you're in the root directory of your repository
      #     flutter pub get

      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      - name: storing in env
        # run: flutter build apk
        run: |
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" > ../../linkify/.env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> ../../linkify/.env
          echo "hi" >> ..linkify/.env



      # - name: Build Flutter App
      #   run: flutter build apk --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}



      # - name: Inject secrets
      #   run: | 
      #     echo "client_id=${{ secrets.CLIENT_ID }}" >> /home/dell/Desktop/saver/Linkify/linkify/.env
      #     echo "client_secret=${{ secrets.CLIENT_SECRET }}" >> /home/dell/Desktop/saver/Linkify/linkify/.env
        # run: echo "client_secret=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV


      # env:
      #     client_id: ${{ secrets.CLIENT_ID }}
      #     client_secret: ${{ secrets.client_secret }}




      # Set up Flutter
      # - name: Set up Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: '3.24.5'

      # Cache Flutter dependencies
      # - name: Cache Flutter dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.pub-cache
      #       ~/.flutter-plugins
      #     key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-flutter-




      # # Install dependencies
      # - name: Install dependencies
      #   run: |
      #     cd $GITHUB_WORKSPACE  # This ensures you're in the root directory of your repository
      #     flutter pub get






      # Additional setup for macOS (iOS builds)
      # - name: Install CocoaPods dependencies (macOS only)
      #   if: ${{ matrix.os == 'macos-latest' }}
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     cd ios
      #     pod install
      #     cd ..

      # Test the app
      # - name: Run Flutter tests
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     flutter test

      # Build the Flutter app
      # - name: Build Flutter App
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     if [ "${{ matrix.os }}" == "ubuntu-latest" ] || [ "${{ matrix.os }}" == "windows-latest" ]; then
      #       flutter build apk --release
      #     elif [ "${{ matrix.os }}" == "macos-latest" ]; then
      #       if [ -d ios ]; then
      #         flutter build ipa --release
      #       else
      #         echo "iOS project is not set up. Skipping iOS build."
      #       fi
      #     fi

      # Upload the artifact
      # - name: Upload Build Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ matrix.os }}-build
      #     path: |
      #       build/app/outputs/flutter-apk/app-release.apk # Android (Ubuntu/Windows)
      #       build/ios/ipa/*.ipa                           # iOS (macOS)
